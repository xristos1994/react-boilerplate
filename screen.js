const config = {
  preset: 'jest-puppeteer',
  roots: ['<rootDir>/src'],
  collectCoverageFrom: ['src/**/*.{js,jsx,ts,tsx}', '!src/**/*.d.ts'],
  setupFiles: [],
  setupFilesAfterEnv: ['./src/setupTests.js'],
  testMatch: [
    '<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}',
    '<rootDir>/src/**/*.{spec,test1}.{js,jsx,ts,tsx}',
  ],
  testEnvironment: 'jest-environment-jsdom-fourteen',
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': '<rootDir>/node_modules/babel-jest',
    '^.+\\.css$': '<rootDir>/config/jest/cssTransform.js',
    '^(?!.*\\.(js|jsx|ts|tsx|css|json)$)':
      '<rootDir>/config/jest/fileTransform.js',
  },
  transformIgnorePatterns: [
    '[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$',
    '^.+\\.module\\.(css|sass|scss)$',
  ],
  modulePaths: [],
  moduleNameMapper: {
    '^react-native$': 'react-native-web',
    '^.+\\.module\\.(css|sass|scss)$': 'identity-obj-proxy',
    '@core/store(.*)$': '<rootDir>/src/core/store$1',
    '@core/components(.*)$': '<rootDir>/src/core/components$1',
    '@core/utils(.*)$': '<rootDir>/src/core/utils$1',
    '@core/models(.*)$': '<rootDir>/src/core/models$1',
    '@core/operators(.*)$': '<rootDir>/src/core/operators$1',
    '@core/actions-engine(.*)$': '<rootDir>/src/core/actions-engine$1',
    '@core/configuration(.*)$': '<rootDir>/src/core/configuration$1',
    'website(.*)$': '<rootDir>/src/website/$1',
    'components(.*)$': '<rootDir>/src/website/components/$1',
    'utils(.*)$': '<rootDir>/src/website/utils/$1',
    'models(.*)$': '<rootDir>/src/website/models/$1',
    'services(.*)$': '<rootDir>/src/website/services/$1',
    'routes(.*)$': '<rootDir>/src/website/routes/$1',
    'theme(.*)$': '<rootDir>/src/theme/$1',
  },
  moduleFileExtensions: [
    'web.js',
    'js',
    'web.ts',
    'ts',
    'web.tsx',
    'tsx',
    'json',
    'web.jsx',
    'jsx',
    'node',
  ],
  watchPlugins: [
    'jest-watch-typeahead/filename',
    'jest-watch-typeahead/testname',
  ],
  snapshotSerializers: ['enzyme-to-json/serializer'],
};

module.exports = config;
